
<!-- this is a comment. in the next tag, the xmlns tags define namespaces,
the name after of the equality signs being the name of the namespace. In
the code below, we can use this name instead of the full path -->
<mvc:View controllerName="content.ARIMA_RESULTS_EG"
xmlns="sap.m"
xmlns:mvc="sap.ui.core.mvc"
xmlns:table="sap.ui.table"
xmlns:l="sap.ui.commons.layout"
xmlns:html="http://www.w3.org/1999/xhtml">
<!-- view content goes here -->
<!-- this HTML paragraph is used as a spacer -->
<html:p/>
<!-- here we have the definition of the table.
Next to different settings for the appearance
and behavior of the table, we bind the endpoint
/Sales of our data source to our rows -->
<table:Table
id="ARIMA_RESULTS_EG"
visibleRowCount="10"
selectionMode="Single"
navigationMode="Paginator"
editable="false"
rows="{/ARIMA_RESULTS_EG}">
<!-- this defines one column in the table. The property
"sortProperty" defines the column of the data source on
which the column will sort -->
<table:Column sortProperty="ID">
<table:label>
<Label text="ID" design="Bold"/>
</table:label>
<table:template>
<Label text="{ID}"/>
</table:template>
</table:Column>
<table:Column sortProperty="PRICE">
<!-- the label is shown in the header of the table -->

<table:label>
<Label text="PRICE" design="Bold"/>
</table:label>
<!-- for each column, a template is required which
defines how how the data is visualized -->
<table:template>
<!-- this label defines the actual content (aka the
rows) that are shown in the table. here, we bind the
column CUSTOMER_NAME of the data source
to this table column -->
<Label text="{PRICE}"/>
</table:template>
</table:Column>

<table:Column sortProperty="LOW80">
<!-- the label is shown in the header of the table -->

<table:label>
<Label text="LOW80" design="Bold"/>
</table:label>
<!-- for each column, a template is required which
defines how how the data is visualized -->
<table:template>
<!-- this label defines the actual content (aka the
rows) that are shown in the table. here, we bind the
column CUSTOMER_NAME of the data source
to this table column -->
<Label text="{LOW80}"/>
</table:template>
</table:Column>

<table:Column sortProperty="HI80">
<!-- the label is shown in the header of the table -->

<table:label>
<Label text="HI80" design="Bold"/>
</table:label>
<!-- for each column, a template is required which
defines how how the data is visualized -->
<table:template>
<!-- this label defines the actual content (aka the
rows) that are shown in the table. here, we bind the
column CUSTOMER_NAME of the data source
to this table column -->
<Label text="{HI80}"/>
</table:template>
</table:Column>

<table:Column sortProperty="LOW95">
<!-- the label is shown in the header of the table -->

<table:label>
<Label text="LOW95" design="Bold"/>
</table:label>
<!-- for each column, a template is required which
defines how how the data is visualized -->
<table:template>
<!-- this label defines the actual content (aka the
rows) that are shown in the table. here, we bind the
column CUSTOMER_NAME of the data source
to this table column -->
<Label text="{LOW95}"/>
</table:template>
</table:Column>

<table:Column sortProperty="HI95">
<!-- the label is shown in the header of the table -->

<table:label>
<Label text="HI95" design="Bold"/>
</table:label>
<!-- for each column, a template is required which
defines how how the data is visualized -->
<table:template>
<!-- this label defines the actual content (aka the
rows) that are shown in the table. here, we bind the
column CUSTOMER_NAME of the data source
to this table column -->
<Label text="{HI95}"/>
</table:template>
</table:Column>




</table:Table>
</mvc:View>
